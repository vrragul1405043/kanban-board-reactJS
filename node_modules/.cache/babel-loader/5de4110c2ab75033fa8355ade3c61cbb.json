{"ast":null,"code":"var _jsxFileName = \"/Users/ragulravisankar/Desktop/kanban-board-react/src/components/Board/CardItem.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { BoardContext } from \"./Board\";\nimport { Card } from \"react-bootstrap\";\nimport TaskForm from \"./New Task/TaskForm\";\nconst initialEditedValues = {\n  title: \"\",\n  description: \"\"\n};\nconst EDIT = \"edit\";\nconst DELETE = \"delete\";\n\nfunction CardItem(props) {\n  const [show, setShow] = useState(false);\n  const [editedValues, setFormValues] = useState(initialEditedValues);\n\n  const handleClose = () => setShow(false);\n\n  const {\n    taskState,\n    onDeletingTask,\n    onUpdatingTask\n  } = useContext(BoardContext);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const clickHandler = type => {\n    if (type === EDIT) {\n      var formValues = taskState.find(task => {\n        return task.id === props.task.id;\n      });\n      setFormValues(formValues);\n      handleShow();\n    } else if (type === DELETE) {\n      onDeletingTask(props.task.id);\n    }\n  };\n\n  const handleUpdate = (values, submitProps) => {\n    submitProps.setSubmitting(false);\n    onUpdatingTask(values);\n    setShow(false);\n    submitProps.resetForm();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TaskForm, {\n    editedValues: editedValues,\n    taskState: \"Update\",\n    show: show,\n    handleClose: handleClose,\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    key: props.task.id,\n    className: \"card-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, props.task.title, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-task-option pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => clickHandler(\"edit\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), \"\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => clickHandler(\"delete\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default CardItem;","map":{"version":3,"sources":["/Users/ragulravisankar/Desktop/kanban-board-react/src/components/Board/CardItem.js"],"names":["React","useState","useContext","useEffect","BoardContext","Card","TaskForm","initialEditedValues","title","description","EDIT","DELETE","CardItem","props","show","setShow","editedValues","setFormValues","handleClose","taskState","onDeletingTask","onUpdatingTask","handleShow","clickHandler","type","formValues","find","task","id","handleUpdate","values","submitProps","setSubmitting","resetForm"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { BoardContext } from \"./Board\";\nimport { Card } from \"react-bootstrap\";\nimport TaskForm from \"./New Task/TaskForm\";\n\nconst initialEditedValues = {\n  title: \"\",\n  description: \"\"\n};\n\nconst EDIT = \"edit\";\nconst DELETE = \"delete\";\n \nfunction CardItem(props) {\n  const [show, setShow] = useState(false);\n  const [editedValues, setFormValues] = useState(initialEditedValues);\n  const handleClose = () => setShow(false);\n  const { taskState, onDeletingTask, onUpdatingTask } = useContext(\n    BoardContext\n  );\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const clickHandler = (type) => {\n    if (type === EDIT) {\n     var formValues=  taskState.find((task) => {\n       return task.id===props.task.id\n      });\n      setFormValues(formValues);\n      handleShow();\n    } else if (type === DELETE) {\n      onDeletingTask(props.task.id);\n    }\n  };\n\n  const handleUpdate = (values, submitProps) => {\n    submitProps.setSubmitting(false);\n    onUpdatingTask(values);\n    setShow(false);\n    submitProps.resetForm();\n  };\n\n  return (\n    <>\n      <TaskForm\n        editedValues={editedValues}\n        taskState=\"Update\"\n        show={show}\n        handleClose={handleClose}\n        onSubmit={handleUpdate}\n      ></TaskForm>\n      <Card key={props.task.id} className=\"card-task\">\n        <Card.Body>\n          <Card.Title>\n            {props.task.title}{\" \"}\n            <div className=\"card-task-option pull-right\">\n              <a onClick={() => clickHandler(\"edit\")}>\n                <i className=\"fas fa-edit\"></i>\n              </a>\n              &nbsp;\n              <a onClick={() => clickHandler(\"delete\")}>\n                <i className=\"fas fa-trash\"></i>\n              </a>\n            </div>\n          </Card.Title>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default CardItem;\n"]},"metadata":{},"sourceType":"module"}