{"ast":null,"code":"var _jsxFileName = \"/Users/ragulravisankar/Desktop/kanban-board-react/src/components/Board/Board.js\";\nimport React, { useState, useEffect, useReducer, createContext } from \"react\";\nimport NewTask from \"./New Task/NewTask\";\nimport BoardLanes from \"./BoardLanes\";\nimport \"./Board.css\";\nimport axios from \"axios\";\nconst stagesData = [{\n  name: \"TODO\",\n  id: 1\n}, {\n  name: \"In Progress\",\n  id: 2\n}, {\n  name: \"Review\",\n  id: 3\n}, {\n  name: \"Completed\",\n  id: 4\n}];\nconst taskData = [{\n  id: 1,\n  title: \"Task 1\",\n  description: \"Testing Task 1\",\n  stage: 1\n}, {\n  id: 2,\n  title: \"Task 2\",\n  description: \"Just Test 2\",\n  stage: 1\n}, {\n  id: 3,\n  title: \"Task 3\",\n  description: \"Just Test\",\n  stage: 2\n}, {\n  id: 4,\n  title: \"Task 4\",\n  description: \"Just Test\",\n  stage: 3\n}, {\n  id: 5,\n  title: \"Task 5\",\n  description: \"Just Test\",\n  stage: 4\n}];\nconst myJSON = JSON.stringify(taskData);\nexport const BoardContext = createContext({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ON_DROP\":\n      const droppedTask = action.payload;\n      const updatedTasks = state.map(task => {\n        if (task.id === droppedTask.id) {\n          return droppedTask;\n        }\n\n        return task;\n      });\n      return updatedTasks;\n\n    case \"LOAD_DATA\":\n      return action.payload;\n\n    case \"ADD_NEW\":\n      return [...state, action.payload];\n\n    case \"ON_DELETE\":\n      return state.filter(task => task.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction Board() {\n  useEffect(() => {\n    axios.get('https://zblm46wzp8.execute-api.us-east-1.amazonaws.com/Prod').then(res => {\n      console.log(res);\n    }).then(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    axios.post('https://zblm46wzp8.execute-api.us-east-1.amazonaws.com/Prod/board', {\n      id: 1,\n      task: myJSON\n    }).then(res => {\n      console.log(res);\n    }).then(error => console.log(error));\n  }, []);\n  const [taskState, dispatch] = useReducer(reducer, taskData);\n  const [stages, setStage] = useState(stagesData);\n  useEffect(() => {\n    dispatch({\n      type: \"LOAD_DATA\",\n      payload: taskState\n    });\n  }, [taskState, stages]);\n\n  const onDragStartHandler = (event, taskId, stageId) => {\n    var data = {\n      taskId: taskId,\n      stageId: stageId\n    };\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(data));\n    event.dataTransfer.effectAllowed = \"move\"; //event.dataTransfer.setData(\"taskName\", taskName);\n  };\n\n  const onTaskContainerDragStartHandler = (event, laneId) => {\n    let fromBox = JSON.stringify({\n      laneId: laneId\n    });\n    event.dataTransfer.setData(\"laneId\", fromBox);\n  };\n\n  const onTaskContainerDragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onTaskContainerDropHandler = (event, droppedLaneId) => {\n    /*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\n     swapStages(fromLane.laneId,droppedLaneId) */\n  };\n\n  const swapStages = (fromLane, toLane) => {\n    /*  const filterStage = stages.filter((x) => x.id === fromLane);\n     filterStage[0].id=toLane;\n     setStage([...stages,filterStage[0]]) */\n  };\n\n  const onDragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onDropHandler = (event, droppedStageId) => {\n    // console.log(event);\n    console.log(droppedStageId);\n    let droppedData = event.dataTransfer.getData(\"text/plain\");\n    console.log(droppedData);\n    droppedData = JSON.parse(droppedData);\n    const filterTask = taskState.filter(x => x.id === droppedData.taskId);\n    filterTask[0].stage = droppedStageId;\n    dispatch({\n      type: \"ON_DROP\",\n      payload: filterTask[0]\n    });\n  };\n\n  const onAddingNewTask = dataFromChild => {\n    dataFromChild.stage = 1;\n    dataFromChild.id = taskState.length + 1;\n    dispatch({\n      type: \"ADD_NEW\",\n      payload: dataFromChild\n    });\n  };\n\n  const onUpdatingTask = dataFromChild => {\n    console.log(dataFromChild);\n    dispatch({\n      type: \"ON_DROP\",\n      payload: dataFromChild\n    });\n  };\n\n  const onDeletingTask = taskId => {\n    dispatch({\n      type: \"ON_DELETE\",\n      payload: taskId\n    });\n  };\n\n  const ContextData = {\n    taskState,\n    onDragStartHandler,\n    onDragOverHandler,\n    onDropHandler,\n    onUpdatingTask,\n    onDeletingTask,\n    onTaskContainerDragStartHandler,\n    onTaskContainerDropHandler,\n    onTaskContainerDragOverHandler\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewTask, {\n    addNewTask: onAddingNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BoardContext.Provider, {\n    value: ContextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BoardLanes, {\n    stages: stages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/ragulravisankar/Desktop/kanban-board-react/src/components/Board/Board.js"],"names":["React","useState","useEffect","useReducer","createContext","NewTask","BoardLanes","axios","stagesData","name","id","taskData","title","description","stage","myJSON","JSON","stringify","BoardContext","reducer","state","action","type","droppedTask","payload","updatedTasks","map","task","filter","Board","get","then","res","console","log","error","post","taskState","dispatch","stages","setStage","onDragStartHandler","event","taskId","stageId","data","dataTransfer","setData","effectAllowed","onTaskContainerDragStartHandler","laneId","fromBox","onTaskContainerDragOverHandler","types","preventDefault","onTaskContainerDropHandler","droppedLaneId","swapStages","fromLane","toLane","onDragOverHandler","onDropHandler","droppedStageId","droppedData","getData","parse","filterTask","x","onAddingNewTask","dataFromChild","length","onUpdatingTask","onDeletingTask","ContextData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, createContext } from \"react\";\nimport NewTask from \"./New Task/NewTask\";\nimport BoardLanes from \"./BoardLanes\";\nimport \"./Board.css\";\nimport axios from \"axios\";\n\n\nconst stagesData = [\n  { name: \"TODO\", id: 1 },\n  { name: \"In Progress\", id: 2 },\n  { name: \"Review\", id: 3 },\n  { name: \"Completed\", id: 4 },\n];\nconst taskData = [\n  {\n    id: 1,\n    title: \"Task 1\",\n    description: \"Testing Task 1\",\n    stage: 1,\n  },\n  {\n    id: 2,\n    title: \"Task 2\",\n    description: \"Just Test 2\",\n    stage: 1,\n  },\n  {\n    id: 3,\n    title: \"Task 3\",\n    description: \"Just Test\",\n    stage: 2,\n  },\n  {\n    id: 4,\n    title: \"Task 4\",\n    description: \"Just Test\",\n    stage: 3,\n  },\n  {\n    id: 5,\n    title: \"Task 5\",\n    description: \"Just Test\",\n    stage: 4,\n  }\n];\n\nconst myJSON = JSON.stringify(taskData);\n\n \nexport const BoardContext = createContext({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ON_DROP\":\n      const droppedTask = action.payload;\n      const updatedTasks = state.map((task) => {\n        if (task.id === droppedTask.id) {\n          return droppedTask;\n        }\n        return task;\n      });\n      return updatedTasks;\n    case \"LOAD_DATA\":\n      return action.payload;\n    case \"ADD_NEW\":\n      return [...state, action.payload];\n    case \"ON_DELETE\":\n      return state.filter((task) => task.id !== action.payload);\n    default:\n      return state;\n  }\n}\nfunction Board() {\n  useEffect(() => {\n    axios.get('https://zblm46wzp8.execute-api.us-east-1.amazonaws.com/Prod').then(res => {\n      console.log(res);\n    })\n    .then(error => console.log(error));\n  }, []);\n\n  useEffect(() =>{\n    axios.post('https://zblm46wzp8.execute-api.us-east-1.amazonaws.com/Prod/board', {id:1,task:myJSON}).then(res => {\n      console.log(res);\n    })\n    .then(error => console.log(error));\n  },[]);\n\n  const [taskState, dispatch] = useReducer(reducer, taskData);\n  const [stages, setStage] = useState(stagesData);\n\n  useEffect(() => {\n    dispatch({ type: \"LOAD_DATA\", payload: taskState });\n  }, [taskState, stages]);\n\n  const onDragStartHandler = (\n    event,\n    taskId,\n    stageId\n  ) => {\n    var data = {\n      taskId: taskId,\n      stageId: stageId,\n    };\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(data));\n    event.dataTransfer.effectAllowed = \"move\";\n    //event.dataTransfer.setData(\"taskName\", taskName);\n  };\n\n  const onTaskContainerDragStartHandler = (event,laneId) => {\n    let fromBox = JSON.stringify({ laneId: laneId });\n    event.dataTransfer.setData(\"laneId\", fromBox);\n  };\n  const onTaskContainerDragOverHandler = (event) => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onTaskContainerDropHandler = (event, droppedLaneId) => {\n  /*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\n   swapStages(fromLane.laneId,droppedLaneId) */\n  };\n  \n const swapStages = (fromLane, toLane) => {\n\n     /*  const filterStage = stages.filter((x) => x.id === fromLane);\n      filterStage[0].id=toLane;\n      setStage([...stages,filterStage[0]]) */\n  };\n  const onDragOverHandler = (event) => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onDropHandler = (event, droppedStageId) => {\n    // console.log(event);\n    console.log(droppedStageId)\n    let droppedData = event.dataTransfer.getData(\"text/plain\");\n    console.log(droppedData)\n    droppedData = JSON.parse(droppedData);\n    const filterTask = taskState.filter((x) => x.id === droppedData.taskId);\n    filterTask[0].stage = droppedStageId;\n    dispatch({ type: \"ON_DROP\", payload: filterTask[0] });\n  };\n\n  const onAddingNewTask = (dataFromChild) => {\n    dataFromChild.stage = 1;\n    dataFromChild.id = taskState.length + 1;\n    dispatch({ type: \"ADD_NEW\", payload: dataFromChild });\n  };\n\n  const onUpdatingTask = (dataFromChild) => {\n    console.log(dataFromChild)\n    dispatch({ type: \"ON_DROP\", payload: dataFromChild });\n  };\n\n  const onDeletingTask = (taskId) => {\n    dispatch({ type: \"ON_DELETE\", payload: taskId });\n  };\n\n  const ContextData = {\n    taskState,\n    onDragStartHandler,\n    onDragOverHandler,\n    onDropHandler,\n    onUpdatingTask,\n    onDeletingTask,\n    onTaskContainerDragStartHandler,\n    onTaskContainerDropHandler,\n    onTaskContainerDragOverHandler\n  };\n\n  return (\n    <div className=\"container-fluid pt-3\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <NewTask addNewTask={onAddingNewTask}/>\n        </div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-12\">\n            <BoardContext.Provider value={ContextData}>\n                <BoardLanes stages={stages}></BoardLanes>\n            </BoardContext.Provider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}